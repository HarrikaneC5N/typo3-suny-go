page {
	includeJSFooterlibs {
    	solr-jquery >
    	solr-ui >
		solr-autocomplete = EXT:solr/Resources/Public/JavaScript/JQuery/jquery.autocomplete.min.js
		solr-autocomplete.excludeFromConcatenation = 1
		solr-suggest = EXT:solr/Resources/Public/JavaScript/suggest_controller.js
		solr-suggest.excludeFromConcatenation = 1
	}
	includeCSS {
		search >
		solr-ui >
		solr-suggest = EXT:solr/Resources/Public/StyleSheets/Frontend/suggest.css
	}
}

plugin.tx_solr {
	javascriptFiles.library >
	general.dateFormat.date = {$e_magineurs.tx_solr.general.dateFormat.date}

	view {
		layoutRootPaths.20 = {$e_magineurs.conf.dossierExtensions}/{$e_magineurs.tx_solr.view.layoutRootPath}
		partialRootPaths.20 = {$e_magineurs.conf.dossierExtensions}/{$e_magineurs.tx_solr.view.partialRootPath}
		templateRootPaths.20 = {$e_magineurs.conf.dossierExtensions}/{$e_magineurs.tx_solr.view.templateRootPath}

		templateFiles {
			results = Results
	        results.availableTemplates {
	        	default {
			        label = Default Searchresults Template
			        file = Results
			    }
	            ResultsLigne {
		            label = Template results inline
		            file = ResultsLigne
		        }
	        }
		}
	}

	index {
		enableFileIndexing {
			# pageContext - index files from tt_content, shown in indexed frontend pages
			pageContext = 1
			pageContext {
				# restrict indexed files extensions to index
				fileExtensions = xls,xlsx,doc,docx,ppt,pptx,odt,pdf,zip,ods,odp
			}
			# Storage Context is indexing the file-system for example creating a download area
			storageContext = 0
			storageContext {
				2 {
					# restrict indexed files extensions to index
					fileExtensions = xls,xlsx,doc,docx,ppt,pptx,odt,pdf,zip,ods,odp
					# FAL generally does not have enable fields, but metadata ships fields which can be used for that purpose
					enableFields {
						accessGroups >
						endtime >
					}
				}
			}
			# Activates Indexing of Files attached to TCA records (like news), needs further configuration in queue
			recordContext = 1
			recordContext {
				# restrict indexed files extensions to index
				fileExtensions = xls,xlsx,doc,docx,ppt,pptx,odt,pdf,zip,ods,odp
			}
		}
		queue {

			pages = {$e_magineurs.tx_solr.index.queue.pages}
			pages {
				indexer {
					# à activer si le site est en HTTPS par défaut
					#frontendDataHelper.scheme = https
				}
	            fields {
					type_stringS = TEXT
					type_stringS.value = Pages

					titre_textSpellS = title

					content_textSpellM = CONTENT
					content_textSpellM {
						table = tt_content
						select{
							pidInList.field = uid
							where = (colPos = 0 OR colPos = -1) AND (CType = "textmedia" OR CType = "header")
						}
						renderObj = COA
						renderObj {
							1 = TEXT
							1 {
								field = header
								wrap = |<br />
								if.isTrue.field = header
								stripHtml = 1
							}
							2 = TEXT
							2 {
								field = bodytext
								wrap = |<br />
								if.isTrue.field = bodytext
								stripHtml = 1
							}
						}
						stdWrap.stripHtml = 1
					}

					url = TEXT
					url {
						typolink {
							parameter = {field:uid}
							parameter.insertData = 1
							forceAbsoluteUrl = 1
							returnLast = url
						}
					}
	            }
			}
			actualite = {$e_magineurs.tx_solr.index.queue.actualite}
			actualite {
				table = tx_news_domain_model_news
				additionalWhereClause = pid IN ({$e_magineurs.tx_solr.index.queue.actualite.pidActualites})
				fields {
					type_stringS = TEXT
					type_stringS.value = Actualité
					title = title
					category_stringM = SOLR_RELATION
					category_stringM {
						localField = categories
						multiValue = 1
					}

					date_stringS = datetime
					image_textS = FILES
					image_textS {
						references {
							table= tx_news_domain_model_news
							uid.data = field:uid
							fieldName= fal_media
						}
						begin = 0
						maxItems = 1
						renderObj = TEXT
						renderObj {
							stdWrap.data = file:current:publicUrl
							stdWrap.wrap = |
						}
					}
					
					content = SOLR_CONTENT
					content {
						cObject = COA
						cObject {

							5 = TEXT
							5 {
								field = teaser
								stripHtml = 1
								noTrimWrap = || |
							}
							10 = TEXT
							10 {
								field = bodytext
								stripHtml = 1
								noTrimWrap = || |
							}
							20 = SOLR_RELATION
							20 {
								localField = content_elements
								foreignLabelField = bodytext
								singleValueGlue = | |
							}
						}
					}


					titre_textSpellS < .title
					content_textSpellM < .content

					url = TEXT
					url {
						typolink {
							parameter = {$e_magineurs.tx_solr.index.queue.actualite.pidActualitesDetail}
							additionalParams = &tx_news_pi1%5Bnews%5D={field:uid}&tx_news_pi1%5Bcontroller%5D=News&tx_news_pi1%5Baction%5D=detail
							additionalParams.insertData = 1
							useCacheHash = 1
							returnLast = url
						}
					}
				}
				attachments = {$e_magineurs.tx_solr.index.queue.actualite.attachements}
				attachments {
				    fields = {$e_magineurs.tx_solr.index.queue.actualite.attachements.fields}
				}
			}
			agenda = {$e_magineurs.tx_solr.index.queue.agenda}
			agenda {
				table = tx_news_domain_model_news
				additionalWhereClause = pid IN ({$e_magineurs.tx_solr.index.queue.agenda.pidAgenda})
				fields {
					type_stringS = TEXT
					type_stringS.value = Agenda
					title = title
					datedebut_stringS = begindate
					datefin_stringS = finishdate

					image_textS = FILES
					image_textS {
						references {
							table= tx_news_domain_model_news
							uid.data = field:uid
							fieldName= fal_media
						}
						begin = 0
						maxItems = 1
						renderObj = TEXT
						renderObj {
							stdWrap.data = file:current:publicUrl
							stdWrap.wrap = |
						}
					}
					content = SOLR_CONTENT
					content {
						cObject = COA
						cObject {

							5 = TEXT
							5 {
								field = teaser
								stripHtml = 1
								noTrimWrap = || |
							}
							10 = TEXT
							10 {
								field = bodytext
								stripHtml = 1
								noTrimWrap = || |
							}
							20 = SOLR_RELATION
							20 {
								localField = content_elements
								foreignLabelField = bodytext
								singleValueGlue = | |
							}
						}
					}

					category_stringM = SOLR_RELATION
					category_stringM {
						localField = categories
						multiValue = 1
					}

					titre_textSpellS < .title
					content_textSpellM < .content

					url = TEXT
					url {
						typolink {
							parameter = {$e_magineurs.tx_solr.index.queue.agenda.pidAgendaDetail}
							additionalParams = &tx_news_pi1%5Bnews%5D={field:uid}&tx_news_pi1%5Bcontroller%5D=News&tx_news_pi1%5Baction%5D=detail
							additionalParams.insertData = 1
							useCacheHash = 1
							returnLast = url
						}
					}
				}
				attachments = {$e_magineurs.tx_solr.index.queue.agenda.attachements}
				attachments {
				    fields = {$e_magineurs.tx_solr.index.queue.actualite.attachements.fields}
				}
			}
			faq < .actualite
			faq = {$e_magineurs.tx_solr.index.queue.faq}
			faq {
				additionalWhereClause =  pid IN ({$e_magineurs.tx_solr.index.queue.faq.pidFaq})
				fields >
				fields {
					type_stringS = TEXT
					type_stringS.value = FAQ
					title = title
					content = SOLR_CONTENT
					content {
						cObject = COA
						cObject {
							10 = TEXT
							10 {
								field = bodytext
								stripHtml = 1
								noTrimWrap = || |
							}
							20 = SOLR_RELATION
							20 {
								localField = content_elements
								foreignLabelField = bodytext
								singleValueGlue = | |
							}
						}
					}
					category_stringM = SOLR_RELATION
					category_stringM {
						localField = categories
						multiValue = 1
					}
					titre_textSpellS < .title
					content_textSpellM < .content

					url = TEXT
					url {
						typolink {
							parameter = {$e_magineurs.tx_solr.index.queue.faq.pidFaqDetail}
							additionalParams = &tx_news_pi1%5Bnews%5D={field:uid}&tx_news_pi1%5Bcontroller%5D=News&tx_news_pi1%5Baction%5D=detail
							additionalParams.insertData = 1
							useCacheHash = 1
							returnLast = url
						}
					}
				}
				attachments = {$e_magineurs.tx_solr.index.queue.faq.attachements}
				attachments {
				    fields = {$e_magineurs.tx_solr.index.queue.actualite.attachements.fields}
				}
			}
			annuaire_des_personnes = {$e_magineurs.tx_solr.index.queue.annuairePersonnes}
			annuaire_des_personnes {
				table = tx_eannuaires_domain_model_fiche
				additionalWhereClause = pid IN ({$e_magineurs.tx_solr.index.queue.annuaire_des_personnes.pidAnnuairePersonnes})
				fields {
					type_stringS = TEXT
					type_stringS.value = Annuaire des personnes
					title = COA
					title {
						10 = TEXT
						10.field = firstname
						10.stdWrap.noTrimWrap = || |
						20 = TEXT
						20.field = title
					}
					cell_textS = cantonstexte
					phone_textS = phone
					mail_textS = email
					portrait_textS = FILES
					portrait_textS {
						references {
							table= tx_eannuaires_domain_model_fiche
							uid.data = field:uid
							fieldName = image
						}
						begin = 0
						maxItems = 1
						renderObj = TEXT
						renderObj {
							stdWrap.data = file:current:publicUrl
							stdWrap.wrap = |
						}
					}
					category_stringM = SOLR_RELATION
					category_stringM {
						localField = categories
						multiValue = 1
					}

					titre_textSpellS < .title
					content_textSpellM < .content

					url = TEXT
					url {
						typolink {
							parameter = {$e_magineurs.tx_solr.index.queue.annuaire_des_personnes.pidAnnuairePersonneDetail}
							additionalParams = &tx_eannuaires_pi1%5Bfiche%5D={field:uid}&tx_eannuaires_pi1%5Baction%5D=show&tx_eannuaires_pi1%5Bcontroller%5D=Fiche
							additionalParams.insertData = 1
							returnLast = url
							useCacheHash = 1
						}
					}
				}
				attachments = {$e_magineurs.tx_solr.index.queue.annuaire_des_personnes.attachements}
				attachments {
				    fields = {$e_magineurs.tx_solr.index.queue.annuaire_des_personnes.attachements.fields}
				}
			}
			annuaires_des_lieux = {$e_magineurs.tx_solr.index.queue.annuaireLieux}
			annuaires_des_lieux {
				table = tx_eannuaires_domain_model_fiche
				additionalWhereClause = pid IN ({$e_magineurs.tx_solr.index.queue.annuaires_des_lieux.pidAnnuaireLieux})
				fields {
					type_stringS = TEXT
					type_stringS.value = Annuaire des lieux
					title = title
					adresse_textS = address
					ville_textM = SOLR_RELATION
					ville_textM {
						localField = city
						foreignLabelField = title
						multiValue = 1
					}
					codePostal_textM = SOLR_RELATION
					codePostal_textM {
						localField = city
						foreignLabelField = zipcode
						multiValue = 1
					}
					phone_textS = phone
					mail_textS = email
					image_textS = FILES
					image_textS {
						references {
							table= tx_eannuaires_domain_model_fiche
							uid.data = field:uid
							fieldName = image
						}
						begin = 0
						maxItems = 1
						renderObj = TEXT
						renderObj {
							stdWrap.data = file:current:publicUrl
							stdWrap.wrap = |
						}
					}
					category_stringM = SOLR_RELATION
					category_stringM {
						localField = categories
						multiValue = 1
					}

					titre_textSpellS < .title
					content_textSpellM < .content

					url = TEXT
					url {
						typolink {
							parameter = {$e_magineurs.tx_solr.index.queue.annuaires_des_lieux.pidAnnuaireLieuxDetail}
							additionalParams = &tx_eannuaires_pi1%5Bfiche%5D={field:uid}&tx_eannuaires_pi1%5Baction%5D=show&tx_eannuaires_pi1%5Bcontroller%5D=Fiche
							additionalParams.insertData = 1
							returnLast = url
							useCacheHash = 1
						}
					}
				}
				attachments = {$e_magineurs.tx_solr.index.queue.annuaires_des_lieux.attachements}
				attachments {
				    fields = {$e_magineurs.tx_solr.index.queue.annuaires_des_lieux.attachements.fields}
				}
			}
			galerie_video = {$e_magineurs.tx_solr.index.queue.galerieVideo}
			galerie_video {
				table = tx_eannuaires_domain_model_fiche
				additionalWhereClause = pid IN ({$e_magineurs.tx_solr.index.queue.galerie_video.pidGalerieVideo})
				fields {
					type_stringS = TEXT
					type_stringS.value = Vidéo
					title = title
					content = TEXT
					content {
						field = description
						stripHtml = 1
					}
					cell_textS = cell
					image_textS = FILES
					image_textS {
						references {
							table= tx_eannuaires_domain_model_fiche
							uid.data = field:uid
							fieldName = image
						}
						begin = 0
						maxItems = 1
						renderObj = TEXT
						renderObj {
							stdWrap.data = file:current:publicUrl
							stdWrap.wrap = |
						}
					}
					category_stringM = SOLR_RELATION
					category_stringM {
						localField = categories
						multiValue = 1
					}

					titre_textSpellS < .title
					content_textSpellM < .content

					url = TEXT
					url {
						typolink {
							parameter = {$e_magineurs.tx_solr.index.queue.galerie_video.pidGalerieVideoDetail}
							additionalParams = &tx_eannuaires_pi1%5Bfiche%5D={field:uid}&tx_eannuaires_pi1%5Baction%5D=show&tx_eannuaires_pi1%5Bcontroller%5D=Fiche
							additionalParams.insertData = 1
							returnLast = url
							useCacheHash = 1
						}
					}
				}
			}
			galerie_photo = {$e_magineurs.tx_solr.index.queue.galeriePhoto}
			galerie_photo {
				table = sys_file_collection
				additionalWhereClause = pid IN ({$e_magineurs.tx_solr.index.queue.galerie_photo.pidGaleriePhoto})
				fields {
					title = title
					type_stringS = TEXT
					type_stringS.value = Galerie photo
					date_stringS = datetime
					image_textS = FILES
					image_textS {
						references {
							table= sys_file_collection
							uid.data = field:uid
							fieldName= main_asset
						}
						begin = 0
						maxItems = 1
						renderObj = TEXT
						renderObj {
							stdWrap.data = file:current:publicUrl
							stdWrap.wrap = |
						}
					}
					content = TEXT
					content {
						field = webdescription
						stripHtml = 1
					}

					titre_textSpellS < .title
					content_textSpellM < .content

					url = TEXT
					url {
						typolink {
							parameter = {$e_magineurs.tx_solr.index.queue.galerie_photo.pidGaleriePhotoDetail}
							additionalParams = &tx_fsmediagallery_mediagallery%5BmediaAlbum%5D={field:uid}
							additionalParams.insertData = 1
							returnLast = url
							useCacheHash = 1
						}
					}
				}
			}
			glossaire = {$e_magineurs.tx_solr.index.queue.glossaire}
			glossaire {
				table = tx_dpnglossary_domain_model_term
				additionalWhereClause = pid IN ({$e_magineurs.tx_solr.index.queue.glossaire.pidGlossaire})
				fields {
					type_stringS = TEXT
					type_stringS.value = Glossaire
					title = name
					content = SOLR_RELATION
					content {
						localField = descriptions
						foreignLabelField = text
						multiValue = 1
						stripHtml = 1
					}

					titre_textSpellS < .title
					content_textSpellM < .content

					url = TEXT
					url {
						typolink {
							parameter = {$e_magineurs.tx_solr.index.queue.glossaire.pidGlossaireDetail}
							additionalParams = &tx_dpnglossary_glossary%5Baction%5D=show&tx_dpnglossary_glossary%5Bcontroller%5D=Term&tx_dpnglossary_glossary%5Bterm%5D={field:uid}
							additionalParams.insertData = 1
							returnLast = url
							useCacheHash = 1
						}
					}
				}
			}


			fileadmin = 0

			dossier_fichier = 0
			dossier_fichier {
				table = sys_file_storage
				storageUid = 2
			}

			_FILES {
				# Basic configuration which applies to all files which are indexed, record: sys_file_metadata
				default {
					type_stringS = TEXT
					type_stringS.value = Document
					title = title
					thumbnail_stringM = CONTENT
					thumbnail_stringM {
						table = sys_file_metadata
						select{
							pidInList = root
							selectFields = sys_file_processedfile.identifier
							join = sys_file_processedfile ON sys_file_metadata.file = sys_file_processedfile.original
							where.data = field:file
							where.wrap = sys_file_processedfile.original=|
							max = 1
						}
						renderObj = TEXT
						renderObj {
							value.field = identifier
							if.isTrue.field = identifier
						}
					}
					extension_textS = SOLR_RELATION
					extension_textS {
						localField = file
						foreignLabelField = extension
					}
					size_textS = COA
					size_textS.10 = SOLR_RELATION
					size_textS.10 {
						localField = file
						foreignLabelField = size
					}
					content = description

					titre_textSpellS < .title
					content_textSpellM < .content
				}
			}
		}
	}
	search {
		targetPage = {$e_magineurs.tx_solr.search.targetPage}
		initializeWithEmptyQuery = 1
		showResultsOfInitialEmptyQuery = 1
		query {
			allowEmptyQuery = {$e_magineurs.tx_solr.search.query.allowEmptyQuery}
			// qf parameter http://wiki.apache.org/solr/DisMaxQParserPlugin#qf_.28Query_Fields.29
			queryFields = title^15.0, titre_textSpellS^15.0, teaser_textS^12.0, content^12.0, content_textSpellM^12.0, catSearchFirst_textM^12.0, catSearchSecond_textM^12.0, catSearchThird_textM^12.0, cell_textS^5.0, keywords^2.0, tagsH1^5.0, tagsH2H3^3.0, tagsH4H5H6^2.0, tagsInline^1.0
			// see http://wiki.apache.org/solr/DisMaxRequestHandler#mm_.28Minimum_.27Should.27_Match.29
			minimumMatch =
			tieParameter = 1.0
		}
        results {
			resultsHighlighting = 1
			resultsHighlighting {
				highlightFields = title, teaser_textS, content
				wrap = <span class="p-1 bg-info text-white">|</span>
			}
			resultsPerPage = {$e_magineurs.tx_solr.search.results.resultsPerPage}
		}
        sorting = 1
        sorting {
            options {
                relevance.label = Pertinence
                title.label = Titre
                type >
                author >
                created.label = Date de création
            }
        }
        faceting = 1
        faceting {
        	facets.type {
		    field = type_stringS
		    label = Type de contenu
		   }
		   facets.category {
		    field = category_stringM
		    label = Catégorie
		   }
        }
	}
	suggest = 1
	statistics = 1
}

tx_solr_suggest = PAGE
tx_solr_suggest {
    typeNum = 7384
    config {
        disableAllHeaderCode = 1
        xhtml_cleaning = 0
        admPanel = 0
        additionalHeaders = Content-type: text/plain
        no_cache = 0
    }

    10 = USER
    10 {
        userFunc = TYPO3\CMS\Extbase\Core\Bootstrap->run
        extensionName = Solr
        pluginName = pi_suggest
        vendorName = ApacheSolrForTypo3
        controller = Suggest
        action = suggest
    }
}

lib.solrParams = COA_INT
lib.solrParams {
    10 = TEXT
    10.data = GP:q
    10.noTrimWrap = |recherche sur : | |
    10.if.isTrue.data = GP:q

    20 = TEXT
    20.data = GP:tx_solr|filter|0
    20.noTrimWrap = |filtré par | |
    20.if.isTrue.data = GP:tx_solr|filter|0

    30 = TEXT
    30.data = GP:tx_solr|filter|1
    30.noTrimWrap = |filtré par | |
    30.if.isTrue.data = GP:tx_solr|filter|1
}

[!epackage.isLoaded('solr')]
plugin.tx_solr >
page {
	includeJSFooterlibs {
		solr-autocomplete >
		solr-suggest >
	}
	includeCSS{
		solr-suggest >
	}
}
[end]


["{$e_magineurs.tx_solr.solr.local.path}" == ""]
lib.searchMini >
lib.searchMini = TEXT
[end]
